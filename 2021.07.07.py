# 1.
# 프로그램
# 목적 / 프로그램이란(뜻)
# 함수 - 값을
# 만드는
# 놈
# 변수 - 값을
# 저장하는
# 놈
# 결과(값) - 프로그램의
# 목적
# < -  만드는
# 놈: 함수 == 프로그램
#
# 2.
# 값
# 2 + 2: 연산
# 4: 연산의
# 결과(값) - 정수
# 정수
# 외의...실수, 복소수, 문자, 문자열, 논리
# 이미지, 동영상, 소리
# 형태:
# 0.
# 버스라인의
# 크기: 컴퓨터 / 운영체제: 현재는
# 64
# bit, 호환성을
# 위해서는
# 32
# bit
# 1.
# 숫자: 정수, 실수 / 복소수
# 한계:
# 2.
# 문자:
# 3.
# 논리:
# 4.
# 멀티미디어...: 규정x, 저장0
#
# bit - 컴퓨터
# 신호
# 단위
# 0, 1 -> 인터넷
# 속도
# byte - 데이터
# 단위
# 8
# bit -> USB, SSD, HDD, 저장
# 단위
# int - 데이터
# 타입
# 기본, 버스
# 수와
# 동일, 가장
# 빠른
# 데이터
# 타입
# 호환성을
# 위해
# 32
# bit로
# 처리하는
# 경우가
# 많음
# int
# 값의
# 범위: 64
# 일
# 경우 - 0
# ~ 2 ** 64 - 1
#
# bit
# 5
# 자리 -> 0
# ~ 31(2 ** 5 - 1)
# - 16
# ~ 0
# ~ + 16 - 1
# - 2 ** 4
# ~ + 2 ** 4 - 1
# - 2 ** (5 - 1)
# ~ + 2 ** (5 - 1) - 1
# bit
# n자리 -> - 2 ** (n - 1)
# ~ + 2 ** (n - 1) - 1
#
# 1.
# 숫자: (호환)
# 정수
# int(32), long(64), short(16)
# 실수
# float(32), double(64)
# 복소수
# complex
#
# 기호표현
# ~ 8
# bit
# 동양권
# 문자
# 표현
# 추가
# 2.
# 문자: char(16) - 2
# 종
# 이상의
# 동양권문자
# 인식
# 오류 -> UTF8(3
# byte) 전세계의
# 문자를
# 한장에서
# 볼
# 수
# 있음
# 3.
# 논리: True / False
# boolean(1): 1
# byte -> 청기
# 백기
# 게임...
# 4.
# 멀티미디어...: 규정x, 저장0
# byte(8) - 데이터
# 저장
# 단위
#
# -> 기타
# 데이터
# 타입? - union, struct, .... ->
#
# class: 예
#
# )문자열
# string
# == == == == == == == == == == == == == == == == == == == == == == == == == == == == == =
# 4
# 2 + 2
#
# 연산, 함수: 값을
# 생성하는
# 역할
# 4 = 2 + 2
# ->변수
# a = 2 + 2

print(4)
print(2+2)
# 4 = 2+2
a = 2+2
print(a)