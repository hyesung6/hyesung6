# -*- coding: utf-8 -*-
"""Untitled7.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10xmVBL2y9fhM9I3t61YBFgowFcm8bEhk
"""

from sklearn.datasets import load_boston
from sklearn.model_selection import train_test_split

data = load_boston()
xTrain, xTest, yTrain, yTest\
    = train_test_split(data.data, data.target, random_state=42)
data.feature_names

from sklearn.linear_model import LinearRegression

model = LinearRegression()
model.fit(xTrain, yTrain)

score = model.score(xTest, yTest)
print("정확도: ", score)

coefficient = model.coef_
intercept = model.intercept_
print("계수 : \n", coefficient)
print()
print("절편 : \n", intercept)

from sklearn.datasets import load_diabetes
from sklearn.model_selection import train_test_split

data = load_diabetes()
xTrain, xTest, yTrain, yTest\
    = train_test_split(data.data, data.target, random_state=42)
print(data, "\n", data.target.size)

from sklearn.linear_model import Ridge

ridge = Ridge(alpha=1.0)
ridge.fit(xTrain, yTrain)

score = ridge.score(xTest, yTest)
print("정확도: ", score)

from sklearn.linear_model import Lasso

lasso = Lasso(alpha=1.0)
lasso.fit(xTrain, yTrain)

score = lasso.score(xTest, yTest)
print("정확도: ", score)

from sklearn.linear_model import ElasticNet

elastic = ElasticNet(alpha=1.0, l1_ratio=0.5)
elastic.fit(xTrain, yTrain)

score = elastic.score(xTest, yTest)
print("정확도: ", score)

from sklearn.linear_model import LinearRegression
import pandas as pd
import numpy as np

linear = LinearRegression()
linear.fit(xTrain, yTrain)

score = linear.score(xTest, yTest)
print("정확도: ", score)


coefficients = np.vstack((linear.coef_, ridge.coef_, lasso.coef_, elastic.coef_))
index = ["linear", "ridge", "lasso", "elastic"]
coefficients_df = pd.DataFrame(coefficients, columns=data.feature_names, index=index)

print("정규화 선형회귀 모델별 가중치(계수) 비교")
coefficients_df

from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
import pandas as pd

dataset = load_iris()
data = pd.DataFrame(dataset.data, columns=dataset.feature_names)
xTrain, xTest, yTrain, yTest = train_test_split(data, dataset.target, random_state=42)

import matplotlib.pyplot as plt

xTrain.plot(kind="box")
plt.title("xTrain")
plt.show()
xTest.plot(kind="box")
plt.title("xTest")
plt.show()